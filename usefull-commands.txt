kubectl cluster-info
kubectl get pods -o wide -A  

#Start and  Delete pods
kubectl run hello --image=asterisktech/myk3sapp --port=80
kubectl delete pods hello 

#Desc
kubectl describe pod hello 

#Run
kubectl exec hello -- apt upgrade -y

#Connect and run BASH
kubectl exec -it hello -- bash                                                                                                                                                        23-08-08 - 23:15:32

#Logs
kubectl logs hello

#Rort forvarse
kubectl  port-forward  hello 4435:80

#Create POD
kubectl run nginx --image=nginx

#Expose(Create service)
kubectl expose pod example-pod --port=80 --name example-pod

#delete Service
kubectl delete service example-pod 

#API resources list
kubectl api-resources

# Get the documentation of the resource and its fields
kubectl explain pods
  
# Get the documentation of a specific field of a resource
kubectl explain pods.spec.containers

#logs follow
kubectl logs -f blue

#Logs with labels
kubectl logs -l app=blue-green
 
#Shell
kubectl exec -ti blue /bin/sh

#Top
kubectl top pods

# dun temporary  Pod to debug
kubectl run -it --rm debug-pod --image=arm64v8/alpine -- /bin/sh

# export creation of config map to file (dry-run means just create a file fut not aapy it)
kubectl create configmap website --from-file=index.html --dry-run -o yaml > configmap.yaml

#attach Debug container  inside pod (if there is no bash or sh avail)
kubectl debug ${PODNAME} --attach

#Usefull  small image for net debug
kubectl run --rm  -it net-debug5 --image=nixery.dev/shell/git/htop/wget/curl /bin/bash 

#Wireshark shiff
kubectl sniff nginx-84bfb9bc8-72h6w  #-p

#Skaffold contiliously deploy  your application  
https://skaffold.dev/  

#Local development for Kubernetes
https://mirrord.dev/
https://www.telepresence.io/

#Easy  install k3s
https://github.com/alexellis/k3sup

#API ref
https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/

#kubectl Cheat Sheet
https://kubernetes.io/docs/reference/kubectl/cheatsheet/